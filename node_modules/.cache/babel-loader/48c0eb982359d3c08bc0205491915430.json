{"ast":null,"code":"import _slicedToArray from \"C:\\\\Git\\\\my-money\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Git\\\\my-money\\\\src\\\\pages\\\\Aluno.js\";\nimport React from 'react';\nimport Rest from '../Utils/rest';\nimport { useState } from 'react';\nimport { id } from 'postcss-selector-parser';\nconst baseURL = 'https://appacademia-9ede4.firebaseio.com/';\n\nconst _Rest = Rest(baseURL),\n      useGet = _Rest.useGet,\n      usePost = _Rest.usePost,\n      useDelete = _Rest.useDelete;\n\nconst Aluno = ({\n  match\n}) => {\n  const data = useGet(\"Aluno/\".concat(match.params.data));\n\n  const _usePost = usePost(\"Aluno/\".concat(match.params.data)),\n        _usePost2 = _slicedToArray(_usePost, 2),\n        postData = _usePost2[0],\n        salvar = _usePost2[1];\n\n  const _useDelete = useDelete(),\n        _useDelete2 = _slicedToArray(_useDelete, 2),\n        removeData = _useDelete2[0],\n        remover = _useDelete2[1];\n\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        cpf = _useState2[0],\n        setCpf = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        nome = _useState4[0],\n        setName = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        email = _useState6[0],\n        setEmail = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        senha = _useState8[0],\n        setSenha = _useState8[1];\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        datanasc = _useState10[0],\n        setDatanasc = _useState10[1];\n\n  const _useState11 = useState(''),\n        _useState12 = _slicedToArray(_useState11, 2),\n        valor = _useState12[0],\n        setvalor = _useState12[1];\n  /*const onChangename = evt =>{\r\n   setName(evt.target.value)\r\n   }\r\n    const onChangeEmail = evt =>{\r\n    setEmail(evt.target.value)\r\n    }\r\n  \n    const onChangeSenha= evt =>{\r\n    setSenha(evt.target.value)\r\n    }\r\n      const onChangedatanasc = evt =>{\r\n     setDatanasc(evt.target.value)\r\n     }*/\n\n\n  const onChangeValor = evt => {\n    setvalor(evt.target.value);\n  };\n\n  const onChangecpf = evt => {\n    setCpf(evt.target.value);\n  };\n\n  const salvarAluno = async () => {\n    if (!isNaN(valor) && valor.search(/^[-]?\\d+(\\.)?\\d+?$/) >= 0) {\n      await salvar({\n        cpf,\n        nome,\n        email,\n        senha,\n        datanasc,\n        valor: parseFloat(valor)\n      });\n      setCpf(0);\n      setName('');\n      setEmail('');\n      setSenha();\n      setDatanasc('');\n      data.refetch();\n    }\n  };\n\n  const removerAluno = async id => {\n    await remover(\"Aluno/\".concat(match.params.data, \"/\").concat(id));\n    data.refetch();\n  };\n\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Alunos\"), React.createElement(\"table\", {\n    className: \"table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Valor\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \" Cpf \"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Nome \"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Email \"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Senha \"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \" Data Nascimento\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, data.data && Object.keys(data.data).map(Aluno => {\n    return React.createElement(\"tr\", {\n      key: Aluno,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, data.data[Aluno].cpf), React.createElement(\"td\", {\n      className: \"text-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, data.data[Aluno].nome, \" \", '', React.createElement(\"button\", {\n      className: \"btn btn-danger\",\n      onClick: () => removerAluno(Aluno),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"-\")));\n  }), React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    value: cpf,\n    onChange: onChangecpf,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  })), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    value: valor,\n    onChange: onChangeValor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"btn btn-success\",\n    onClick: salvarAluno,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"+\"))))));\n};\n\nexport default Aluno;","map":{"version":3,"sources":["C:\\Git\\my-money\\src\\pages\\Aluno.js"],"names":["React","Rest","useState","id","baseURL","useGet","usePost","useDelete","Aluno","match","data","params","postData","salvar","removeData","remover","cpf","setCpf","nome","setName","email","setEmail","senha","setSenha","datanasc","setDatanasc","valor","setvalor","onChangeValor","evt","target","value","onChangecpf","salvarAluno","isNaN","search","parseFloat","refetch","removerAluno","Object","keys","map"],"mappings":"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","sourcesContent":["\r\nimport React from 'react'\r\nimport Rest  from '../Utils/rest'\r\nimport {useState} from 'react'\r\nimport { id } from 'postcss-selector-parser'\r\n\r\nconst baseURL = 'https://appacademia-9ede4.firebaseio.com/'\r\nconst {useGet,usePost,useDelete} = Rest(baseURL)\r\n\r\nconst Aluno = ({match}) => {\r\n  const data = useGet(`Aluno/${match.params.data}`)\r\n  const [postData,salvar] = usePost(`Aluno/${match.params.data}`)\r\n  const [removeData,remover] = useDelete()\r\n  const[cpf,setCpf] = useState()\r\n  const[nome,setName] = useState('')\r\n  const[email,setEmail] = useState('')\r\n  const[senha,setSenha]= useState('')\r\n  const[datanasc,setDatanasc] = useState('')\r\n  const [valor,setvalor] = useState('')\r\n\r\n \r\n     /*const onChangename = evt =>{\r\n      setName(evt.target.value)\r\n      }\r\n       const onChangeEmail = evt =>{\r\n       setEmail(evt.target.value)\r\n       }\r\n    \r\n       const onChangeSenha= evt =>{\r\n       setSenha(evt.target.value)\r\n       }\r\n\r\n       const onChangedatanasc = evt =>{\r\n        setDatanasc(evt.target.value)\r\n        }*/\r\n      \r\n        const onChangeValor = evt =>{\r\n          setvalor(evt.target.value)\r\n        }\r\n   \r\n   \r\n        const onChangecpf = evt =>{\r\n          setCpf(evt.target.value)\r\n          }\r\n  \r\n   const salvarAluno = async() =>{\r\n    if(!isNaN(valor) && valor.search(/^[-]?\\d+(\\.)?\\d+?$/) >=0) {\r\n    await salvar({\r\n      cpf,\r\n      nome,\r\n      email,\r\n      senha,\r\n      datanasc,\r\n     valor: parseFloat(valor)\r\n    })\r\n    setCpf(0)\r\n    setName('')\r\n    setEmail('')\r\n    setSenha()\r\n    setDatanasc('')\r\n    data.refetch()\r\n  } \r\n  }\r\n  const removerAluno = async(id) =>\r\n  {\r\n    await remover(`Aluno/${match.params.data}/${id}`)\r\n    data.refetch()\r\n  }\r\n\r\n  return (\r\n  <div className ='container'>\r\n      <h1>Alunos</h1>\r\n      <table className = 'table'>\r\n      <thead>\r\n         <tr>\r\n        <th>Valor</th>\r\n        <th> Cpf </th> \r\n        <th>Nome </th>\r\n        <th>Email </th> \r\n        <th>Senha </th>\r\n        <th> Data Nascimento</th> \r\n               </tr>\r\n      </thead>\r\n     \r\n     <tbody>\r\n       { data.data &&\r\n     Object \r\n     .keys(data.data)\r\n     .map(Aluno => {\r\n       return(\r\n           <tr key={Aluno}>\r\n               <td>{data.data[Aluno].cpf}</td>\r\n               <td className='text-right'>\r\n                {data.data[Aluno].nome} {''}\r\n                                  <button  className='btn btn-danger'onClick={() => removerAluno(Aluno)}>-</button>\r\n                 </td>\r\n                            </tr>\r\n       )\r\n\r\n     })\r\n      }\r\n      <tr>\r\n      <td><input type ='text' value={cpf} onChange={onChangecpf}/></td>\r\n      <td><input type ='text' value={valor} onChange={onChangeValor}/>\r\n      <button className= 'btn btn-success' onClick={salvarAluno}>+</button></td>\r\n      </tr>\r\n\r\n     </tbody>\r\n\r\n     </table>\r\n      \r\n  </div>\r\n    )\r\n}\r\nexport default Aluno"]},"metadata":{},"sourceType":"module"}